// out: style.css, compress: true, sourceMap: true
// 1.less注释
    /*多行注释在编译成css的时候 不会被注释掉  单行注释的会被注释掉*/
// 2.less变量
// 格式： @变量名：值;
@baseColor:#e92322;
a{
    color:@baseColor;
}
// 3.less混入: 可以将定义好的样式引入到另外一个样式中，类似于函数的调用
// .addRadius{
//     border-radius: 10px;
//     -webkit-border-radius:10px;
//     -moz-border-radius:10px;
// }
// 相当于定义了一个带有参数的函数
.addRadius(@r:15px){
    border-radius: @r;
    -webkit-border-radius:@r;
    -moz-border-radius:@r;
}
div{
    width: 100px;
    height: 200px;
    // 引入已经写好的样式
    .addRadius();
}

// 4.less嵌套  实现选择器的继承  减少代码量  使代码结构清晰
.jd_wrap{
    color:@baseColor;
    div{
        color:@baseColor;
        &::before{
            color:red;
        }
    }
    > p{
        // 直接子元素
        color:@baseColor;
    } 
    > a{
        color:@baseColor;
        & :hover{
            // & 相当于交集选择器
            color:red;
        }
    }
}
